syntax = "proto3";

package gophkeeper;

option go_package = "github.com/darkseear/gophkeeper/server/internal/api/proto";

import "google/protobuf/timestamp.proto";

service Gophkeeper {
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Sync(SyncRequest) returns (SyncResponse);
  rpc GetSecret(GetSecretRequest) returns (GetSecretResponse);
  rpc UpdateSecret(UpdateSecretRequest) returns (UpdateSecretResponse);
}


// Регистрация и аутентификация
message RegisterRequest {
  string login = 1;
  string password = 2;
}

message RegisterResponse {
  string user_id = 1;
}

message LoginRequest {
  string login = 1;
  string password = 2;
}

message LoginResponse {
  string token = 1;
  string user_id = 2;
}

// Синхронизация и управление секретами
message Secret {
  string id = 1;
  string type = 2;  // "login", "text", "binary", "card"
  map<string, string> metadata = 3;
  bytes data = 4;
  int32 version = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message SyncRequest {
  string token = 1;
  repeated Secret local_secrets = 2;
}

message SyncResponse {
  repeated Secret server_secrets = 1;
}

message GetSecretRequest {
  string token = 1;
  string secret_id = 2;
}

message GetSecretResponse {
  Secret secret = 1;
}

message UpdateSecretRequest {
  string token = 1;
  Secret secret = 2;
}

message UpdateSecretResponse {
  bool success = 1;
}